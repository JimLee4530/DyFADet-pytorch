dataset_name: thumos
train_split: [ 'validation' ]
val_split: [ 'test' ]
dataset: {
  json_file: /data/thumos/annotations/thumos14.json,
  feat_folder: /data/videomaev2-giant_k710_16x4x1_img224_stride4_len16_interval1_thumos, 
  
  file_prefix: ~,
  file_ext: .npy,
  num_classes: 20,
  input_dim: 1408,
  feat_stride: 4,
  num_frames: 16,
  # serve as data augmentation
  trunc_thresh: 0.5,
  crop_ratio: [0.9, 1.0],
  max_seq_len: 2304,
}

model: {
  backbone_type: 'DynE',
  regression_range: [ [ 0, 4 ], [ 4, 8 ], [ 8, 16 ], [ 16, 32 ], [ 32, 64 ], [ 64, 10000 ] ],
  backbone_arch: [ 2, 2, 5 ],
  
  n_encoder_win_size: 1,
  mlp_dim: 768,
  k: 5,
  fpn_type: identity,
  max_buffer_len_factor: 6.0,
  backbone_arch: [ 2, 2, 5 ],
  dyn_head_flag: True,
  dyn_head: {
    budget_loss_lambda: 1.0, 
    tau: 1.5, 
    init_gate: 1.0, 
    type: "GeReTanH" ,
    dyn_type: 'c'
    }, # False
  
  head_act: 'relu',
  input_noise: 0.00001,
}
opt: {
  learning_rate: 0.0001,
  warmup_epochs: 20,
  epochs: 40,
  weight_decay: 0.025,
}
loader: {
  batch_size: 2,
}
train_cfg: {
  init_loss_norm: 100,
  clip_grad_l2norm: 1.0,
  cls_prior_prob: 0.01,
  center_sample: radius,
  center_sample_radius: 1.5,
  droppath: 0.005,
}
# the inference on THUMOS is quite different from EPIC-kitchens
# a major performance gain is achieved by fusing external classification scores
# doing so will require disable multiclass_nms and enable score fusion
test_cfg: {
  voting_thresh: 0.7,
  pre_nms_topk: 2000,
  max_seg_num: 2000,
  min_score: 0.001,
  multiclass_nms: True,
}
output_folder: ./ckpt/
